{
    "docs": [
        {
            "location": "/",
            "text": "FHIRcast - \nmodern, simple application context synchronization\n\n\nOverview\n\n\nFHIRcast synchronizes healthcare applications in real time to show the same clinical content to a common user. For example, a radiologist often works in three disparate applications at the same time (a radiology information system, a PACS and a dictation system), she wants each of these three systems to display the same study or patient at the same time. \n\n\nFHIRcast isn't limited to radiology use-cases. Using \nFHIR Subscriptions\n, FHIRcast naturally extends the SMART on FHIR launch protocol to achieve tight integration between disparate, full-featured applications. FHIRcast builds on the \nCCOW\n abstract model to specify an http-based, simple and decentralized context synchronization specification. For simplicity, the below describes an app synchronizing with an EHR, but any user-facing application can synchronize with FHIRcast. While less common,  bidirectional communication between multiple application is also possible.\n\n\nWhy?\n\n\nThe large number of vendor-specific or proprietary context synchronization methods in production use limit the industry's ability to enhance the large number of integrations currently in production. In practice, these integrations are decentralized and simple. \n\n\nSynchronize\n\n\nAn app creates a subscription to the EHR's UserSession and is then notified when the focus of the session changes, for example, by the clinician opening a patient's chart. The app deletes its subscription when it no longer wants to receive notifications.\n\n\n[TODO: Simple, attractive image illustrating actors and key interactions]\n\n\nEHR launches SMART on FHIR App\n\n\nThe EHR launches the app following the standard (SMART on FHIR EHR launch)[http://www.hl7.org/fhir/smart-app-launch#ehr-launch-sequence]  flow, including identifying the current EHR user using OpenID Connect. As part of the app launch, alongside the acess_token the EHR's authorization server identifies the current user's UserSession:\n\n\n{\n  \"access_token\": \"i8hweunweunweofiwweoijewiwe\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 3600,\n  \"patient\":  \"123\",\n  \"encounter\": \"456\",\n  \"usersession\" : \"789\"\n}\n\n\nAlthough FHIRcast works best with the SMART on FHIR launch and authorization process, it can also be used with implementation-specific launch and authz protocols.\n\n\nApp subscribes to UserSession changes\n\n\nThe app finds or creates an EventDefinition that describes the change it wants to be notified of. \n\n\nGET <fhir base url>/EventDefinition?name=patient-chart-open\n\n\n\n\n{\n  \"resourceType\": \"EventDefinition\",\n  \"id\": \"abc\",\n  \"status\": \"active\",\n  \"name\": \"patient-chart-open\",\n  \"description\": \"Patient in focus changes in UserSession\",\n  \"trigger\": {\n    \"type\": \"named-event\",\n    \"data\": {\n      \"type\": \"UserSession\"\n    },\n    \"condition\": {\n      \"description\": \"Current UserSession.focus contains a Patient not in previous UserSession.focus\",\n      \"language\": \"text/fhirpath\",\n      \"expression\": \"this.focus.ofType(Patient) and this.focus != %previous.focus\"\n    }\n  }\n}\n\n\n\n\n[TODO - ask Bryn for correct syntax for multiple common workflow events]\n\n\nThe app creates a Subscription on the EHR's FHIR server for the given EventDefinition:\n\n\nIn this example, the app asks to be notified of new events via a \nrest-hook\n with the modified resource in the http body. FHIR Subscriptions also describes other possible channels. Note that the bearer access_token used to authenticate to the FHIR server was initially granted during the SMART launch.\n\n\nPOST <fhir base url>/Subscription\nAuthorization: Bearer i8hweunweunweofiwweoijewiwe\n\n\n\n\n{\n  \"resourceType\": \"Subscription\",\n  \"criteria\": \"UserSession?_id=123\",\n  \"topic\": \"<fhir base url>/EventDefinition/abc\",\n  \"channel\": {\n    \"type\": \"rest-hook\",\n    \"endpoint\": \"<app notification endpoint>/on-patientchartopen\",\n    \"payload\": \"application/fhir+json\"\n  }\n}\n\n\n\n\nEHR responds with successful creation\n\n\n201 Created\nLocation: <fhir base url>/Subscription/sub00001\n\n\n\n\nEHR notifies app of change\n\n\nPUT <app notification endpoint>/on-patientchartopen/UserSession\n\n\n\n\n{\n  \"resourceType\": \"UserSession\",\n  \"id\" : \"xyz\",\n  \"user\": \"Practitioner/prov123\",\n  \"status\" : {\n    \"value\" : \"activating\",\n    \"source\" : \"user\"\n  }\n  \"workstation\" : \"Location/readingworkstation456\",\n  \"focus\" : [\n    \"Patient/789\",\n    \"Encounter/100009181\"\n  ],\n  \"created\" : \"2017-12-11T09:57:34.2112Z\",\n }\n\n\n\n\nApp unsubscribes to UserSession changes\n\n\nDELETE <fhir base url>/Subscription/sub00001\n\n\n\n\nCommon workflow EventDefinitions\n\n\n\n\nopen-patient-chart\n\n\nswitch-patient-chart\n\n\nclose-patient-chart\n\n\nopen-imaging-study\n\n\nswitch-imaging-study\n\n\nclose-imaging-study\n\n\nuser-login\n\n\nuser-logout\n\n\nuser-hibernates\n\n\n\n\n[TODO - define fhirpath / Event definitions with names for common workflow events]\n\n\nGet involved!\n\n\nhttps://chat.fhir.org/#narrow/stream/subscriptions",
            "title": "Home"
        },
        {
            "location": "/#fhircast-modern-simple-application-context-synchronization",
            "text": "",
            "title": "FHIRcast - modern, simple application context synchronization"
        },
        {
            "location": "/#overview",
            "text": "FHIRcast synchronizes healthcare applications in real time to show the same clinical content to a common user. For example, a radiologist often works in three disparate applications at the same time (a radiology information system, a PACS and a dictation system), she wants each of these three systems to display the same study or patient at the same time.   FHIRcast isn't limited to radiology use-cases. Using  FHIR Subscriptions , FHIRcast naturally extends the SMART on FHIR launch protocol to achieve tight integration between disparate, full-featured applications. FHIRcast builds on the  CCOW  abstract model to specify an http-based, simple and decentralized context synchronization specification. For simplicity, the below describes an app synchronizing with an EHR, but any user-facing application can synchronize with FHIRcast. While less common,  bidirectional communication between multiple application is also possible.",
            "title": "Overview"
        },
        {
            "location": "/#why",
            "text": "The large number of vendor-specific or proprietary context synchronization methods in production use limit the industry's ability to enhance the large number of integrations currently in production. In practice, these integrations are decentralized and simple.",
            "title": "Why?"
        },
        {
            "location": "/#synchronize",
            "text": "An app creates a subscription to the EHR's UserSession and is then notified when the focus of the session changes, for example, by the clinician opening a patient's chart. The app deletes its subscription when it no longer wants to receive notifications.  [TODO: Simple, attractive image illustrating actors and key interactions]",
            "title": "Synchronize"
        },
        {
            "location": "/#ehr-launches-smart-on-fhir-app",
            "text": "The EHR launches the app following the standard (SMART on FHIR EHR launch)[http://www.hl7.org/fhir/smart-app-launch#ehr-launch-sequence]  flow, including identifying the current EHR user using OpenID Connect. As part of the app launch, alongside the acess_token the EHR's authorization server identifies the current user's UserSession:  {\n  \"access_token\": \"i8hweunweunweofiwweoijewiwe\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 3600,\n  \"patient\":  \"123\",\n  \"encounter\": \"456\",\n  \"usersession\" : \"789\"\n}  Although FHIRcast works best with the SMART on FHIR launch and authorization process, it can also be used with implementation-specific launch and authz protocols.",
            "title": "EHR launches SMART on FHIR App"
        },
        {
            "location": "/#app-subscribes-to-usersession-changes",
            "text": "The app finds or creates an EventDefinition that describes the change it wants to be notified of.   GET <fhir base url>/EventDefinition?name=patient-chart-open  {\n  \"resourceType\": \"EventDefinition\",\n  \"id\": \"abc\",\n  \"status\": \"active\",\n  \"name\": \"patient-chart-open\",\n  \"description\": \"Patient in focus changes in UserSession\",\n  \"trigger\": {\n    \"type\": \"named-event\",\n    \"data\": {\n      \"type\": \"UserSession\"\n    },\n    \"condition\": {\n      \"description\": \"Current UserSession.focus contains a Patient not in previous UserSession.focus\",\n      \"language\": \"text/fhirpath\",\n      \"expression\": \"this.focus.ofType(Patient) and this.focus != %previous.focus\"\n    }\n  }\n}  [TODO - ask Bryn for correct syntax for multiple common workflow events]",
            "title": "App subscribes to UserSession changes"
        },
        {
            "location": "/#the-app-creates-a-subscription-on-the-ehrs-fhir-server-for-the-given-eventdefinition",
            "text": "In this example, the app asks to be notified of new events via a  rest-hook  with the modified resource in the http body. FHIR Subscriptions also describes other possible channels. Note that the bearer access_token used to authenticate to the FHIR server was initially granted during the SMART launch.  POST <fhir base url>/Subscription\nAuthorization: Bearer i8hweunweunweofiwweoijewiwe  {\n  \"resourceType\": \"Subscription\",\n  \"criteria\": \"UserSession?_id=123\",\n  \"topic\": \"<fhir base url>/EventDefinition/abc\",\n  \"channel\": {\n    \"type\": \"rest-hook\",\n    \"endpoint\": \"<app notification endpoint>/on-patientchartopen\",\n    \"payload\": \"application/fhir+json\"\n  }\n}",
            "title": "The app creates a Subscription on the EHR's FHIR server for the given EventDefinition:"
        },
        {
            "location": "/#ehr-responds-with-successful-creation",
            "text": "201 Created\nLocation: <fhir base url>/Subscription/sub00001",
            "title": "EHR responds with successful creation"
        },
        {
            "location": "/#ehr-notifies-app-of-change",
            "text": "PUT <app notification endpoint>/on-patientchartopen/UserSession  {\n  \"resourceType\": \"UserSession\",\n  \"id\" : \"xyz\",\n  \"user\": \"Practitioner/prov123\",\n  \"status\" : {\n    \"value\" : \"activating\",\n    \"source\" : \"user\"\n  }\n  \"workstation\" : \"Location/readingworkstation456\",\n  \"focus\" : [\n    \"Patient/789\",\n    \"Encounter/100009181\"\n  ],\n  \"created\" : \"2017-12-11T09:57:34.2112Z\",\n }",
            "title": "EHR notifies app of change"
        },
        {
            "location": "/#app-unsubscribes-to-usersession-changes",
            "text": "DELETE <fhir base url>/Subscription/sub00001",
            "title": "App unsubscribes to UserSession changes"
        },
        {
            "location": "/#common-workflow-eventdefinitions",
            "text": "open-patient-chart  switch-patient-chart  close-patient-chart  open-imaging-study  switch-imaging-study  close-imaging-study  user-login  user-logout  user-hibernates   [TODO - define fhirpath / Event definitions with names for common workflow events]",
            "title": "Common workflow EventDefinitions"
        },
        {
            "location": "/#get-involved",
            "text": "https://chat.fhir.org/#narrow/stream/subscriptions",
            "title": "Get involved!"
        },
        {
            "location": "/usersession/",
            "text": "UserSession\n\n\nThis is a draft of the UserSession FHIR resource. The below will be superceded by the version officially published by HL7.\n\n\nResource Structure\n\n\n\n\n\n\n\n\nName\n\n\nFlags\n\n\nCardinality\n\n\nType\n\n\nDescription & Constraints\n\n\n\n\n\n\n\n\n\n\nidentifier\n\n\nS\n\n\n0..*\n\n\nIdentifier\n\n\nAn identifier for this session\n\n\n\n\n\n\nuser\n\n\nS\n\n\n1\n\n\nReference(Practitioner, Patient, RelatedPerson)\n\n\nThe user engaged in the session. Based upon the description of the Person resource in the FHIR spec, I don't think that including person makes sense.\n\n\n\n\n\n\nstatus\n\n\n\n\n0..1\n\n\nBackboneElement\n\n\nStatus of the session.\n\n\n\n\n\n\nstatus -> value\n\n\nS\n\n\n1..1\n\n\ncode\n\n\nactivating | active | suspended | closing | closed +  http://hl7.org/fhir/ValueSet/usersession-status-value\n\n\n\n\n\n\nstatus -> source\n\n\n\n\n1..1\n\n\ncode\n\n\nuser | system +     http://hl7.org/fhir/ValueSet/usersession-status-source   This is intended to be used to prevent infinite loops in bi-directional context synchronization scenarios.\n\n\n\n\n\n\nworkstation\n\n\n\n\n0..1\n\n\nCodeableConcept\n\n\nLocation that identifies the physical place at which the user's session is occurring. For the purposes of context synchronization, this is intended to represent the user's workstation.\n\n\n\n\n\n\nfocus\n\n\n\n\n1..*\n\n\nReference(any)\n\n\nThe current focus of the user's session. Common values are a reference to a Patient, Encounter, ImagingStudy, etc.\n\n\n\n\n\n\ncreated\n\n\n\n\n0..1\n\n\ninstant\n\n\nWhen the session was first created.\n\n\n\n\n\n\nexpires\n\n\n\n\n0..1\n\n\ninstant\n\n\nWhen the session will expire.\n\n\n\n\n\n\ncontext\n\n\n\n\n0..*\n\n\nBackboneElement\n\n\nAdditional information about the session. (This follows the pattern established in AuditEvent.entity.detail).\n\n\n\n\n\n\ncontext -> type\n\n\n\n\n1..1\n\n\n\n\nstring\n\n\n\n\n\n\ncontext -> value\n\n\n\n\n1..1\n\n\nstring\n\n\nValue of the property.\n\n\n\n\n\n\n\n\nCompartments\n\n\nUserSession can belong to the following defined \ncompartments\n:\n\n\n\n\nPatient - An instance of a UserSession resource can belong to a Patient compartment either as the user or the focus of UserSession.\n\n\nEncounter - A UserSession resource instance often will have a focus of an encounter.\n\n\nRelatedPerson - a UserSession resource instance belongs to a RelatedPerson compartment, when the user of the UserSession is a RelatedPerson.\n\n\nPractitioner - a UserSession resource instance belongs to a Practitioner compartment, when the user of the UserSession is a Practitioner.\n\n\n\n\nValueSets\n\n\nusersession-status-value\n\n\n\n\nValue set http://hl7.org/fhir/ValueSet/usersession-status-value\n\n\nDefining URL: http://hl7.org/fhir/ValueSet/usersession-status-value\n\n\nName: UserSessionStatusValue\n\n\nDefinition    The status of the UserSession as a whole\n\n\nCommittee:    FHIR-I?\n\n\nOID   \n\n\n\n\n\n\n\n\n\n\nCode\n\n\nDisplay Definition\n\n\n\n\n\n\n\n\n\n\nactivating\n\n\nActivating\n\n\n\n\n\n\nactive\n\n\nActive\n\n\n\n\n\n\nsuspended\n\n\nSuspended\n\n\n\n\n\n\nclosing\n\n\nClosing\n\n\n\n\n\n\nclosed\n\n\nClosed\n\n\n\n\n\n\n\n\nusersession-status-value\n\n\n\n\nValue set http://hl7.org/fhir/ValueSet/usersession-status-source\n\n\nDefining URL: http://hl7.org/fhir/ValueSet/usersession-status-source\n\n\nName: UserSessionStatusSource\n\n\nDefinition    The source of the current status of the UserSession. This is intended to be used to prevent infinite loops in bi-directional context synchronization scenarios.\n\n\nCommittee:    FHIR-I?\n\n\nOID   \n\n\n\n\n\n\n\n\n\n\nCode\n\n\nDisplay Definition\n\n\n\n\n\n\n\n\n\n\nactive\n\n\nActive\n\n\n\n\n\n\nsuspended\n\n\nSuspended\n\n\n\n\n\n\nclosed\n\n\nClosed",
            "title": "UserSession"
        },
        {
            "location": "/usersession/#usersession",
            "text": "This is a draft of the UserSession FHIR resource. The below will be superceded by the version officially published by HL7.",
            "title": "UserSession"
        },
        {
            "location": "/usersession/#resource-structure",
            "text": "Name  Flags  Cardinality  Type  Description & Constraints      identifier  S  0..*  Identifier  An identifier for this session    user  S  1  Reference(Practitioner, Patient, RelatedPerson)  The user engaged in the session. Based upon the description of the Person resource in the FHIR spec, I don't think that including person makes sense.    status   0..1  BackboneElement  Status of the session.    status -> value  S  1..1  code  activating | active | suspended | closing | closed +  http://hl7.org/fhir/ValueSet/usersession-status-value    status -> source   1..1  code  user | system +     http://hl7.org/fhir/ValueSet/usersession-status-source   This is intended to be used to prevent infinite loops in bi-directional context synchronization scenarios.    workstation   0..1  CodeableConcept  Location that identifies the physical place at which the user's session is occurring. For the purposes of context synchronization, this is intended to represent the user's workstation.    focus   1..*  Reference(any)  The current focus of the user's session. Common values are a reference to a Patient, Encounter, ImagingStudy, etc.    created   0..1  instant  When the session was first created.    expires   0..1  instant  When the session will expire.    context   0..*  BackboneElement  Additional information about the session. (This follows the pattern established in AuditEvent.entity.detail).    context -> type   1..1   string    context -> value   1..1  string  Value of the property.",
            "title": "Resource Structure"
        },
        {
            "location": "/usersession/#compartments",
            "text": "UserSession can belong to the following defined  compartments :   Patient - An instance of a UserSession resource can belong to a Patient compartment either as the user or the focus of UserSession.  Encounter - A UserSession resource instance often will have a focus of an encounter.  RelatedPerson - a UserSession resource instance belongs to a RelatedPerson compartment, when the user of the UserSession is a RelatedPerson.  Practitioner - a UserSession resource instance belongs to a Practitioner compartment, when the user of the UserSession is a Practitioner.",
            "title": "Compartments"
        },
        {
            "location": "/usersession/#valuesets",
            "text": "",
            "title": "ValueSets"
        },
        {
            "location": "/usersession/#usersession-status-value",
            "text": "Value set http://hl7.org/fhir/ValueSet/usersession-status-value  Defining URL: http://hl7.org/fhir/ValueSet/usersession-status-value  Name: UserSessionStatusValue  Definition    The status of the UserSession as a whole  Committee:    FHIR-I?  OID         Code  Display Definition      activating  Activating    active  Active    suspended  Suspended    closing  Closing    closed  Closed",
            "title": "usersession-status-value"
        },
        {
            "location": "/usersession/#usersession-status-value_1",
            "text": "Value set http://hl7.org/fhir/ValueSet/usersession-status-source  Defining URL: http://hl7.org/fhir/ValueSet/usersession-status-source  Name: UserSessionStatusSource  Definition    The source of the current status of the UserSession. This is intended to be used to prevent infinite loops in bi-directional context synchronization scenarios.  Committee:    FHIR-I?  OID         Code  Display Definition      active  Active    suspended  Suspended    closed  Closed",
            "title": "usersession-status-value"
        },
        {
            "location": "/about/",
            "text": "Welcome to MkDocs\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "About"
        },
        {
            "location": "/about/#welcome-to-mkdocs",
            "text": "For full documentation visit  mkdocs.org .",
            "title": "Welcome to MkDocs"
        },
        {
            "location": "/about/#commands",
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.",
            "title": "Commands"
        },
        {
            "location": "/about/#project-layout",
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Project layout"
        }
    ]
}